;; Object mysetting/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mysetting/"
  :tables (list 
   (semanticdb-table "ecb-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [810 866])
            ("ecb" include nil nil [919 933])
            ("setq" code nil nil [968 1023])
            ("custom-set-variables" code nil nil [1039 1677])
            ("ecb-layout-name" code nil nil [1681 1706])
            ("ecb-layout-function-left8" code nil nil [1707 1734])
            ("global-set-key" code nil nil [1753 1793])
            ("global-set-key" code nil nil [1794 1836])
            ("global-set-key" code nil nil [1837 1873])
            ("global-set-key" code nil nil [1874 1914])
            ("define-key" code nil nil [1915 1975])
            ("define-key" code nil nil [1976 2036])
            ("ecb-setting" package nil nil [2116 2138]))          
    :file "ecb-setting.el"
    :pointmax 2168
    :fsize 2215
    :lastmodtime '(20987 1972)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "auto-complete-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [835 902])
            ("auto-complete-config" include nil nil [903 934])
            ("auto-complete" include nil nil [935 959])
            ("ac-config-default" code nil nil [960 979])
            ("add-hook" code nil nil [982 2546])
            ("setq" code nil nil [2547 2575])
            ("auto-complete-setting" package nil nil [3021 3053]))          
    :file "auto-complete-setting.el"
    :pointmax 3093
    :fsize 3092
    :lastmodtime '(20987 4031)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "yasnippet-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [861 919])
            ("yasnippet" include nil nil [920 940])
            ("yas-global-mode" code nil nil [941 960])
            ("yasnippet-setting" package nil nil [964 992]))          
    :file "yasnippet-setting.el"
    :pointmax 1039
    :fsize 1027
    :lastmodtime '(20987 2076)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "company-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [807 868])
            ("company" include nil nil [869 887])
            ("add-hook" code nil nil [888 936])
            ("company-setting" package nil nil [938 964]))          
    :file "company-setting.el"
    :pointmax 998
    :fsize 997
    :lastmodtime '(20987 2098)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "xsel-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("unless" code nil nil [944 1479])
            ("xsel-setting" package nil nil [1587 1610]))          
    :file "xsel-setting.el"
    :pointmax 1641
    :fsize 1680
    :lastmodtime '(20987 2179)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "org2-blog-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [958 1014])
            ("org2blog-autoloads" include nil nil [1015 1044])
            ("setq" code nil nil [1125 1585])
            ("setq" code nil nil [1586 1620])
            ("org2-blog-setting" package nil nil [1636 1664]))          
    :file "org2-blog-setting.el"
    :pointmax 1700
    :fsize 1699
    :lastmodtime '(20987 2252)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "hippie-expand-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("senator-try-expand-semantic" function (:prototype-flag t) nil [968 1017])
            ("global-set-key" code nil nil [1018 1061])
            ("setq" code nil nil [1062 1638])
            ("my-indent-or-complete" function nil nil [1749 1896])
            ("define-key" code nil nil [1898 1957])
            ("hippie-expand-setting" package nil nil [2049 2081]))          
    :file "hippie-expand-setting.el"
    :pointmax 2121
    :fsize 2346
    :lastmodtime '(20987 2356)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "cedet-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [987 1048])
            ("load-file" code nil nil [1049 1105])
            ("cedet" include nil nil [1106 1122])
            ("global-ede-mode" code nil nil [1656 1675])
            ("semantic-load-enable-code-helpers" code nil nil [1846 1881])
            ("global-semantic-tag-folding-mode" code nil nil [2056 2090])
            ("global-srecode-minor-mode" code nil nil [2161 2190])
            ("setq" code nil nil [2246 2289])
            ("add-hook" code nil nil [2292 2554])
            ("setq" code nil nil [2578 2659])
            ("setq" code nil nil [2744 2833])
            ("semantic-ia" include nil nil [2835 2857])
            ("semantic-gcc" include nil nil [2858 2881])
            ("setq" code nil nil [2908 2969])
            ("cedet-user-include-dirs" variable
               (:constant-flag t
                :default-value (list ".." "../include" "../inc" "../common" "../public" "../.." "../../include" "../../inc" "../../common" "../../public"))
                nil [2970 3138])
            ("cedet-win32-include-dirs" variable
               (:constant-flag t
                :default-value (list "C:/MinGW/include" "C:/MinGW/include/c++/3.4.5" "C:/MinGW/include/c++/3.4.5/mingw32" "C:/MinGW/include/c++/3.4.5/backward" "C:/MinGW/lib/gcc/mingw32/3.4.5/include" "C:/Program Files/Microsoft Visual Studio/VC98/MFC/Include"))
                nil [3139 3447])
            ("semantic-c" include nil nil [3448 3482])
            ("let" code nil nil [3483 3789])
            ("semantic-add-system-include" code nil nil [3791 3855])
            ("semantic-add-system-include" code nil nil [3856 3920])
            ("semantic-add-system-include" code nil nil [3921 3975])
            ("semantic-add-system-include" code nil nil [3976 4062])
            ("semantic-add-system-include" code nil nil [4063 4123])
            ("semantic-add-system-include" code nil nil [4124 4241])
            ("semantic-add-system-include" code nil nil [4242 4368])
            ("semantic-add-system-include" code nil nil [4369 4477])
            ("setq-mode-local" code nil nil [4479 4604])
            ("my-cedet-hook" function nil nil [4892 5575])
            ("add-hook" code nil nil [5627 5672])
            ("add-hook" code nil nil [5673 5714])
            ("add-hook" code nil nil [5715 5762])
            ("add-hook" code nil nil [5810 5857])
            ("cedet-setting" package nil nil [6370 6394]))          
    :file "cedet-setting.el"
    :pointmax 6418
    :fsize 6473
    :lastmodtime '(20987 1498)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "hilight-symbol-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [835 882])
            ("highlight-symbol" include nil nil [884 911])
            ("global-set-key" code nil nil [912 970])
            ("global-set-key" code nil nil [971 1015])
            ("global-set-key" code nil nil [1016 1068])
            ("global-set-key" code nil nil [1069 1120])
            ("hilight-symbol-setting" package nil nil [1123 1156]))          
    :file "hilight-symbol-setting.el"
    :pointmax 1148
    :fsize 1196
    :lastmodtime '(20987 2512)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "org-mode-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [803 867])
            ("org-install" include nil nil [868 890])
            ("org-publish" include nil nil [891 913])
            ("org-mode-setting" package nil nil [915 942]))          
    :file "org-mode-setting.el"
    :pointmax 977
    :fsize 976
    :lastmodtime '(20987 2627)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "auto-insert-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-hook" code nil nil [882 922])
            ("setq" code nil nil [923 951])
            ("eval-after-load" code nil nil [952 1587])
            ("auto-insert-setting" package nil nil [1680 1710]))          
    :file "auto-insert-setting.el"
    :pointmax 1748
    :fsize 1747
    :lastmodtime '(20987 2753)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "headfile-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("mapc" code nil nil [805 1001])
            ("define-skeleton" code nil nil [1068 1624])
            ("wcy-c/c++-hightligh-included-files-key-map" variable nil nil [1730 1785])
            ("if" code nil nil [1786 2006])
            ("wcy-c/c++-hightligh-included-files" function nil nil [2008 2807])
            ("setq" code nil nil [2861 2970])
            ("headfile-setting" package nil nil [3066 3093]))          
    :file "headfile-setting.el"
    :pointmax 3128
    :fsize 3275
    :lastmodtime '(20987 2811)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "face-font-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("set-background-color" code nil nil [800 829])
            ("set-default-font" code nil nil [984 1014])
            ("face-font-setting" package nil nil [1016 1044]))          
    :file "face-font-setting.el"
    :pointmax 976
    :fsize 1087
    :lastmodtime '(20987 2874)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "hide-block-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("load-library" code nil nil [829 854])
            ("add-hook" code nil nil [855 893])
            ("add-hook" code nil nil [894 934])
            ("add-hook" code nil nil [935 976])
            ("add-hook" code nil nil [977 1018])
            ("add-hook" code nil nil [1019 1059])
            ("add-hook" code nil nil [1060 1106])
            ("hide-block-setting" package nil nil [1496 1525]))          
    :file "hide-block-setting.el"
    :pointmax 1562
    :fsize 1561
    :lastmodtime '(20987 2941)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "auto-complete-clang-setting.el"
    :major-mode 'emacs-lisp-mode
    :tags nil
    :file "auto-complete-clang-setting.el"
    :pointmax 4104
    :fsize 4149
    :lastmodtime '(20987 5633)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!cpper!.emacs.d!mysetting!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
